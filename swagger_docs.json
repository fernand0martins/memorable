{
  "swagger": "2.0",
  "basePath": "/",
  "info": {
    "title": "Media Repo",
    "version": "1.0.0"
  },
  "paths": {
    "/assets": {
      "get": {
        "tags": [
          "Asset"
        ],
        "operationId": "getAssetCollection",
        "produces": [
          "application/ld+json",
          "application/json",
          "text/html"
        ],
        "summary": "Retrieves the collection of Asset resources.",
        "responses": {
          "200": {
            "description": "Asset collection response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Asset"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The collection page number",
            "type": "integer"
          }
        ]
      },
      "post": {
        "tags": [
          "Asset"
        ],
        "operationId": "postAssetCollection",
        "consumes": [
          "application/ld+json",
          "application/json",
          "text/html"
        ],
        "produces": [
          "application/ld+json",
          "application/json",
          "text/html"
        ],
        "summary": "Creates a Asset resource.",
        "responses": {
          "201": {
            "description": "Asset resource created",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "asset",
            "in": "body",
            "description": "The new Asset resource",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        ]
      }
    },
    "/assets/{id}": {
      "get": {
        "tags": [
          "Asset"
        ],
        "operationId": "getAssetItem",
        "produces": [
          "application/ld+json",
          "application/json",
          "text/html"
        ],
        "summary": "Retrieves a Asset resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Asset resource response",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Asset"
        ],
        "operationId": "deleteAssetItem",
        "summary": "Removes the Asset resource.",
        "responses": {
          "204": {
            "description": "Asset resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      },
      "put": {
        "tags": [
          "Asset"
        ],
        "operationId": "putAssetItem",
        "consumes": [
          "application/ld+json",
          "application/json",
          "text/html"
        ],
        "produces": [
          "application/ld+json",
          "application/json",
          "text/html"
        ],
        "summary": "Replaces the Asset resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "body",
            "description": "The updated Asset resource",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset resource updated",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Asset"
        ],
        "operationId": "patchAssetItem",
        "summary": "Updates the Asset resource.",
        "consumes": [
          "application/merge-patch+json"
        ],
        "produces": [
          "application/ld+json",
          "application/json",
          "text/html"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "body",
            "description": "The updated Asset resource",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset resource updated",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "/jwt/register": {
      "post": {
        "tags": [
          "JWT"
        ],
        "operationId": "postCredentialsItem",
        "summary": "Create account",
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "api"
                },
                "password": {
                  "type": "string",
                  "example": "api"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create account"
          }
        }
      }
    },
    "/jwt/login": {
      "post": {
        "tags": [
          "JWT"
        ],
        "operationId": "postCredentialsItem",
        "summary": "Get JWT token",
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "api"
                },
                "password": {
                  "type": "string",
                  "example": "api"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "in": "header",
      "description": "Value for the Authorization header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ],
  "definitions": {
    "Asset": {
      "type": "object",
      "description": "",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "collection": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
